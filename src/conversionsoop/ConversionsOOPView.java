/*
 * ConversionsOOPView.java
 */

package conversionsoop;

import business.ConvCalc;
import org.jdesktop.application.Action;
import org.jdesktop.application.ResourceMap;
import org.jdesktop.application.SingleFrameApplication;
import org.jdesktop.application.FrameView;
import org.jdesktop.application.TaskMonitor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.NumberFormat;
import javax.swing.Timer;
import javax.swing.Icon;
import javax.swing.JDialog;
import javax.swing.JFrame;

/**
 * The application's main frame.
 */
public class ConversionsOOPView extends FrameView {

    public ConversionsOOPView(SingleFrameApplication app) {
        super(app);

        initComponents();

        // status bar initialization - message timeout, idle icon and busy animation, etc
        ResourceMap resourceMap = getResourceMap();
        int messageTimeout = resourceMap.getInteger("StatusBar.messageTimeout");
        messageTimer = new Timer(messageTimeout, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                statusMessageLabel.setText("");
            }
        });
        messageTimer.setRepeats(false);
        int busyAnimationRate = resourceMap.getInteger("StatusBar.busyAnimationRate");
        for (int i = 0; i < busyIcons.length; i++) {
            busyIcons[i] = resourceMap.getIcon("StatusBar.busyIcons[" + i + "]");
        }
        busyIconTimer = new Timer(busyAnimationRate, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                busyIconIndex = (busyIconIndex + 1) % busyIcons.length;
                statusAnimationLabel.setIcon(busyIcons[busyIconIndex]);
            }
        });
        idleIcon = resourceMap.getIcon("StatusBar.idleIcon");
        statusAnimationLabel.setIcon(idleIcon);
        progressBar.setVisible(false);

        // connecting action tasks to status bar via TaskMonitor
        TaskMonitor taskMonitor = new TaskMonitor(getApplication().getContext());
        taskMonitor.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                String propertyName = evt.getPropertyName();
                if ("started".equals(propertyName)) {
                    if (!busyIconTimer.isRunning()) {
                        statusAnimationLabel.setIcon(busyIcons[0]);
                        busyIconIndex = 0;
                        busyIconTimer.start();
                    }
                    progressBar.setVisible(true);
                    progressBar.setIndeterminate(true);
                } else if ("done".equals(propertyName)) {
                    busyIconTimer.stop();
                    statusAnimationLabel.setIcon(idleIcon);
                    progressBar.setVisible(false);
                    progressBar.setValue(0);
                } else if ("message".equals(propertyName)) {
                    String text = (String)(evt.getNewValue());
                    statusMessageLabel.setText((text == null) ? "" : text);
                    messageTimer.restart();
                } else if ("progress".equals(propertyName)) {
                    int value = (Integer)(evt.getNewValue());
                    progressBar.setVisible(true);
                    progressBar.setIndeterminate(false);
                    progressBar.setValue(value);
                }
            }
        });
    }

    @Action
    public void showAboutBox() {
        if (aboutBox == null) {
            JFrame mainFrame = ConversionsOOPApp.getApplication().getMainFrame();
            aboutBox = new ConversionsOOPAboutBox(mainFrame);
            aboutBox.setLocationRelativeTo(mainFrame);
        }
        ConversionsOOPApp.getApplication().show(aboutBox);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jradM2K = new javax.swing.JRadioButton();
        jradO2G = new javax.swing.JRadioButton();
        jradF2C = new javax.swing.JRadioButton();
        jchkShowK = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        jtxtValue = new javax.swing.JTextField();
        jlblUnitIn = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jtxtResult = new javax.swing.JTextField();
        jbtnClear = new javax.swing.JButton();
        jlblUnitOut = new javax.swing.JLabel();
        jbtnConvert = new javax.swing.JButton();
        jradC2F = new javax.swing.JRadioButton();
        jradM2F = new javax.swing.JRadioButton();
        jradL2G = new javax.swing.JRadioButton();
        menuBar = new javax.swing.JMenuBar();
        javax.swing.JMenu fileMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem exitMenuItem = new javax.swing.JMenuItem();
        javax.swing.JMenu helpMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem aboutMenuItem = new javax.swing.JMenuItem();
        statusPanel = new javax.swing.JPanel();
        javax.swing.JSeparator statusPanelSeparator = new javax.swing.JSeparator();
        statusMessageLabel = new javax.swing.JLabel();
        statusAnimationLabel = new javax.swing.JLabel();
        progressBar = new javax.swing.JProgressBar();
        buttonGroup1 = new javax.swing.ButtonGroup();

        mainPanel.setName("mainPanel"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(conversionsoop.ConversionsOOPApp.class).getContext().getResourceMap(ConversionsOOPView.class);
        jLabel1.setFont(resourceMap.getFont("jLabel1.font")); // NOI18N
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        buttonGroup1.add(jradM2K);
        jradM2K.setText(resourceMap.getString("jradM2K.text")); // NOI18N
        jradM2K.setName("jradM2K"); // NOI18N
        jradM2K.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jradM2KItemStateChanged(evt);
            }
        });

        buttonGroup1.add(jradO2G);
        jradO2G.setText(resourceMap.getString("jradO2G.text")); // NOI18N
        jradO2G.setName("jradO2G"); // NOI18N
        jradO2G.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jradO2GItemStateChanged(evt);
            }
        });

        buttonGroup1.add(jradF2C);
        jradF2C.setText(resourceMap.getString("jradF2C.text")); // NOI18N
        jradF2C.setName("jradF2C"); // NOI18N
        jradF2C.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jradF2CItemStateChanged(evt);
            }
        });

        jchkShowK.setText(resourceMap.getString("jchkShowK.text")); // NOI18N
        jchkShowK.setEnabled(false);
        jchkShowK.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jchkShowK.setName("jchkShowK"); // NOI18N

        jLabel2.setFont(resourceMap.getFont("jLabel2.font")); // NOI18N
        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        jtxtValue.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jtxtValue.setText(resourceMap.getString("jtxtValue.text")); // NOI18N
        jtxtValue.setName("jtxtValue"); // NOI18N

        jlblUnitIn.setFont(resourceMap.getFont("jlblUnitIn.font")); // NOI18N
        jlblUnitIn.setText(resourceMap.getString("jlblUnitIn.text")); // NOI18N
        jlblUnitIn.setName("jlblUnitIn"); // NOI18N

        jLabel4.setFont(resourceMap.getFont("jLabel4.font")); // NOI18N
        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N

        jtxtResult.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jtxtResult.setText(resourceMap.getString("jtxtResult.text")); // NOI18N
        jtxtResult.setName("jtxtResult"); // NOI18N

        jbtnClear.setText(resourceMap.getString("jbtnClear.text")); // NOI18N
        jbtnClear.setName("jbtnClear"); // NOI18N
        jbtnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnClearActionPerformed(evt);
            }
        });

        jlblUnitOut.setFont(resourceMap.getFont("jlblUnitOut.font")); // NOI18N
        jlblUnitOut.setForeground(resourceMap.getColor("jlblUnitOut.foreground")); // NOI18N
        jlblUnitOut.setText(resourceMap.getString("jlblUnitOut.text")); // NOI18N
        jlblUnitOut.setName("jlblUnitOut"); // NOI18N

        jbtnConvert.setText(resourceMap.getString("jbtnConvert.text")); // NOI18N
        jbtnConvert.setName("jbtnConvert"); // NOI18N
        jbtnConvert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnConvertActionPerformed(evt);
            }
        });

        buttonGroup1.add(jradC2F);
        jradC2F.setText(resourceMap.getString("jradC2F.text")); // NOI18N
        jradC2F.setName("jradC2F"); // NOI18N
        jradC2F.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jradC2FItemStateChanged(evt);
            }
        });

        buttonGroup1.add(jradM2F);
        jradM2F.setText(resourceMap.getString("jradM2F.text")); // NOI18N
        jradM2F.setName("jradM2F"); // NOI18N
        jradM2F.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jradM2FItemStateChanged(evt);
            }
        });

        buttonGroup1.add(jradL2G);
        jradL2G.setText(resourceMap.getString("jradL2G.text")); // NOI18N
        jradL2G.setName("jradL2G"); // NOI18N
        jradL2G.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jradL2GItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jradM2K)
                            .addComponent(jradM2F)))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(8, 8, 8)))
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jbtnConvert, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE)
                            .addComponent(jtxtValue)
                            .addComponent(jtxtResult)
                            .addComponent(jbtnClear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlblUnitOut)
                            .addComponent(jlblUnitIn)))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jradO2G, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jradL2G))
                        .addGap(18, 18, 18)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(mainPanelLayout.createSequentialGroup()
                                .addComponent(jradF2C)
                                .addGap(18, 18, 18)
                                .addComponent(jradC2F))
                            .addGroup(mainPanelLayout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(jchkShowK)))))
                .addContainerGap(106, Short.MAX_VALUE))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jradM2K)
                    .addComponent(jradO2G)
                    .addComponent(jradF2C)
                    .addComponent(jradC2F))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jchkShowK, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jradL2G)
                        .addComponent(jradM2F)))
                .addGap(34, 34, 34)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtxtValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlblUnitIn))
                .addGap(24, 24, 24)
                .addComponent(jbtnConvert)
                .addGap(17, 17, 17)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtxtResult, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jlblUnitOut))
                .addGap(18, 18, 18)
                .addComponent(jbtnClear)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        menuBar.setBackground(resourceMap.getColor("menuBar.background")); // NOI18N
        menuBar.setBorder(null);
        menuBar.setName("menuBar"); // NOI18N

        fileMenu.setText(resourceMap.getString("fileMenu.text")); // NOI18N
        fileMenu.setName("fileMenu"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(conversionsoop.ConversionsOOPApp.class).getContext().getActionMap(ConversionsOOPView.class, this);
        exitMenuItem.setAction(actionMap.get("quit")); // NOI18N
        exitMenuItem.setName("exitMenuItem"); // NOI18N
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        helpMenu.setText(resourceMap.getString("helpMenu.text")); // NOI18N
        helpMenu.setName("helpMenu"); // NOI18N

        aboutMenuItem.setAction(actionMap.get("showAboutBox")); // NOI18N
        aboutMenuItem.setName("aboutMenuItem"); // NOI18N
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        statusPanel.setName("statusPanel"); // NOI18N

        statusPanelSeparator.setName("statusPanelSeparator"); // NOI18N

        statusMessageLabel.setName("statusMessageLabel"); // NOI18N

        statusAnimationLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        statusAnimationLabel.setName("statusAnimationLabel"); // NOI18N

        progressBar.setName("progressBar"); // NOI18N

        javax.swing.GroupLayout statusPanelLayout = new javax.swing.GroupLayout(statusPanel);
        statusPanel.setLayout(statusPanelLayout);
        statusPanelLayout.setHorizontalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(statusPanelSeparator, javax.swing.GroupLayout.DEFAULT_SIZE, 541, Short.MAX_VALUE)
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(statusMessageLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 371, Short.MAX_VALUE)
                .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statusAnimationLabel)
                .addContainerGap())
        );
        statusPanelLayout.setVerticalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addComponent(statusPanelSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(statusMessageLabel)
                    .addComponent(statusAnimationLabel)
                    .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3))
        );

        setComponent(mainPanel);
        setMenuBar(menuBar);
        setStatusBar(statusPanel);
    }// </editor-fold>//GEN-END:initComponents

    private void jradM2KItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jradM2KItemStateChanged
        if(jradM2K.isSelected()){
            jlblUnitIn.setText(ConvCalc.MIDESC);
            jlblUnitOut.setText(ConvCalc.KMDESC);
            jchkShowK.setEnabled(false);
        }
    }//GEN-LAST:event_jradM2KItemStateChanged

    private void jradF2CItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jradF2CItemStateChanged
        if(jradF2C.isSelected()){
            jlblUnitIn.setText(ConvCalc.FDESC);
            jlblUnitOut.setText(ConvCalc.CDESC);
            jchkShowK.setEnabled(true);
        }
    }//GEN-LAST:event_jradF2CItemStateChanged

    private void jbtnConvertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnConvertActionPerformed
        double v, r;
        
        NumberFormat fixed = NumberFormat.getNumberInstance();
        fixed.setMaximumFractionDigits(3);
        statusMessageLabel.setText("");
        
        try {
//            Validation on incoming numeric values
            v = Double.parseDouble(jtxtValue.getText());
        } catch(NumberFormatException e){
            statusMessageLabel.setText("Input value is not numeric");
            return;
        }
        
        if(jradM2K.isSelected()){
            try {
                r = ConvCalc.getMi2Km(v);
                jtxtResult.setText(fixed.format(r));
            } catch(Exception e) {
                statusMessageLabel.setText(e.getMessage());
                jtxtResult.setText("******");
            }        
        }
        else if(jradF2C.isSelected()){
            boolean showK = jchkShowK.isSelected();
            try {
                r = ConvCalc.getF2C(v);
                jtxtResult.setText(fixed.format(r));
                if(showK){
                    double k = ConvCalc.getKelvin(r);
                    statusMessageLabel.setText("Which is also a temp of: "
                                                + fixed.format(k) + " Kelvin" );
                }
            } catch(Exception e) {
                statusMessageLabel.setText(e.getMessage());
                jtxtResult.setText("******");
            }
        }
        else if(jradC2F.isSelected()){
            boolean showK = jchkShowK.isSelected();
            try {
                r = ConvCalc.getC2F(v);
                jtxtResult.setText(fixed.format(r));
                if(showK){
                    double k = ConvCalc.getKelvin(v);
                    statusMessageLabel.setText("Which is also a temp of: "
                                                + fixed.format(k) + " Kelvin" );
                }   
            } catch(Exception e){
                statusMessageLabel.setText(e.getMessage());
                jtxtResult.setText("******");
            }
        }
        else if(jradM2F.isSelected()) {
            try{
                r = ConvCalc.getM2F(v);
                jtxtResult.setText(fixed.format(r));
            } catch(Exception e) {
                statusMessageLabel.setText(e.getMessage());
                jtxtResult.setText("******");
            }    
        }
        else if(jradO2G.isSelected()){
            try{
                r = ConvCalc.getO2G(v);
                jtxtResult.setText(fixed.format(r));
            } catch(Exception e){
                statusMessageLabel.setText(e.getMessage());
                jtxtResult.setText("******");
            }
        }
        else if(jradL2G.isSelected()){
            try{
                r = ConvCalc.getL2G(v);
                jtxtResult.setText(fixed.format(r));
            } catch(Exception e) {
                statusMessageLabel.setText(e.getMessage());
                jtxtResult.setText("******");
            }
        }
    }//GEN-LAST:event_jbtnConvertActionPerformed

    private void jbtnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnClearActionPerformed
        statusMessageLabel.setText("");
        jtxtValue.setText("");
        jtxtResult.setText("");
        jchkShowK.setEnabled(false);
        buttonGroup1.clearSelection();
    }//GEN-LAST:event_jbtnClearActionPerformed

    private void jradC2FItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jradC2FItemStateChanged
        if(jradC2F.isSelected()){
            jlblUnitIn.setText(ConvCalc.CDESC);
            jlblUnitOut.setText(ConvCalc.FDESC);
            jchkShowK.setEnabled(true);
        }
    }//GEN-LAST:event_jradC2FItemStateChanged

    private void jradM2FItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jradM2FItemStateChanged
        if(jradM2F.isSelected()){
            jlblUnitIn.setText(ConvCalc.MDESC);
            jlblUnitOut.setText(ConvCalc.FTDESC);
            jchkShowK.setEnabled(false);
        }
    }//GEN-LAST:event_jradM2FItemStateChanged

    private void jradO2GItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jradO2GItemStateChanged
        if(jradO2G.isSelected()){
            jlblUnitIn.setText(ConvCalc.OZDESC);
            jlblUnitOut.setText(ConvCalc.GRDESC);
            jchkShowK.setEnabled(false);
        }
    }//GEN-LAST:event_jradO2GItemStateChanged

    private void jradL2GItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jradL2GItemStateChanged
        if(jradL2G.isSelected()){
            jlblUnitIn.setText(ConvCalc.LTDESC);
            jlblUnitOut.setText(ConvCalc.GADESC);
            jchkShowK.setEnabled(false);
        }
    }//GEN-LAST:event_jradL2GItemStateChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JButton jbtnClear;
    private javax.swing.JButton jbtnConvert;
    private javax.swing.JCheckBox jchkShowK;
    private javax.swing.JLabel jlblUnitIn;
    private javax.swing.JLabel jlblUnitOut;
    private javax.swing.JRadioButton jradC2F;
    private javax.swing.JRadioButton jradF2C;
    private javax.swing.JRadioButton jradL2G;
    private javax.swing.JRadioButton jradM2F;
    private javax.swing.JRadioButton jradM2K;
    private javax.swing.JRadioButton jradO2G;
    private javax.swing.JTextField jtxtResult;
    private javax.swing.JTextField jtxtValue;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JLabel statusAnimationLabel;
    private javax.swing.JLabel statusMessageLabel;
    private javax.swing.JPanel statusPanel;
    // End of variables declaration//GEN-END:variables

    private final Timer messageTimer;
    private final Timer busyIconTimer;
    private final Icon idleIcon;
    private final Icon[] busyIcons = new Icon[15];
    private int busyIconIndex = 0;

    private JDialog aboutBox;
}
